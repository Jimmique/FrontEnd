{"ast":null,"code":"var _jsxFileName = \"/home/jordinkolman/Documents/School/FrontEnd/betterprofessor/src/components/SignUp.js\";\nimport React, { useEffect } from \"react\";\nimport { withFormik, Form, Field } from \"formik\";\nimport { Container, Segment, Header } from \"semantic-ui-react\";\nimport { NavLink } from \"react-router-dom\";\nimport axios from \"axios\";\nimport * as Yup from \"yup\";\n\nconst SignUp = ({\n  errors,\n  touched,\n  status,\n  updateUser,\n  values\n}) => {\n  useEffect(() => {\n    if (status) {\n      updateUser(status);\n    }\n  }, [status]);\n  return React.createElement(Container, {\n    className: \"Signup-Page\",\n    style: {\n      margin: \"50px\",\n      width: \"800px\",\n      height: \"800px\",\n      border: \"2px solid #000022\",\n      borderRadius: \"20px\",\n      display: \"flex\",\n      flexFlow: \"column nowrap\",\n      justifyContent: \"flex-start\",\n      alignItems: \"space-around\",\n      alignContent: \"space-around\",\n      backgroundColor: \"#fbf5f3\"\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 15\n    },\n    __self: this\n  }, React.createElement(Header, {\n    style: {\n      fontSize: \"2.5rem\",\n      color: \"#c42847\",\n      margin: \"20px\"\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 31\n    },\n    __self: this\n  }, \"Welcome Professor!\"), React.createElement(Header, {\n    style: {\n      fontSize: \"1.8rem\",\n      color: \"#de3c4b\",\n      margin: \"20px\"\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 34\n    },\n    __self: this\n  }, \"Fill Out the Sections Below to Sign Up\"), React.createElement(Form, {\n    style: {\n      display: \"flex\",\n      flexFlow: \"column nowrap\",\n      padding: \"0 25%\",\n      justifyContent: \"space-between\",\n      alignContent: \"center\",\n      margin: \"20px\"\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 37\n    },\n    __self: this\n  }, React.createElement(Header, {\n    style: {\n      fontSize: \"1.2rem\",\n      color: \"#de3c4b\"\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 47\n    },\n    __self: this\n  }, \"All Fields Are Required\"), React.createElement(Segment, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 50\n    },\n    __self: this\n  }, \"First Name:\"), React.createElement(Field, {\n    type: \"text\",\n    name: \"firstName\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 51\n    },\n    __self: this\n  }), touched.firstName && errors.firstName && React.createElement(Segment, {\n    className: \"error\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 53\n    },\n    __self: this\n  }, errors.firstName), React.createElement(Segment, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 55\n    },\n    __self: this\n  }, \"Last Name:\"), React.createElement(Field, {\n    type: \"text\",\n    name: \"lastName\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 56\n    },\n    __self: this\n  }), touched.lastName && errors.lastName && React.createElement(Segment, {\n    className: \"error\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 58\n    },\n    __self: this\n  }, errors.lastName), React.createElement(Segment, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 60\n    },\n    __self: this\n  }, \"Email Address:\"), React.createElement(Field, {\n    type: \"email\",\n    name: \"email\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 61\n    },\n    __self: this\n  }), touched.email && errors.email && React.createElement(Segment, {\n    className: \"error\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 63\n    },\n    __self: this\n  }, errors.email), React.createElement(Segment, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 65\n    },\n    __self: this\n  }, \"Username: \"), React.createElement(Field, {\n    type: \"text\",\n    name: \"username\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 66\n    },\n    __self: this\n  }), touched.username && errors.username && React.createElement(Segment, {\n    className: \"error\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 68\n    },\n    __self: this\n  }, errors.username), React.createElement(Segment, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 70\n    },\n    __self: this\n  }, \"Password: \"), React.createElement(Field, {\n    type: \"password\",\n    name: \"password\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 71\n    },\n    __self: this\n  }), touched.password && errors.password && React.createElement(Segment, {\n    className: \"error\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 73\n    },\n    __self: this\n  }, errors.password), React.createElement(Segment, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 75\n    },\n    __self: this\n  }, \"College/University:\"), React.createElement(Field, {\n    type: \"text\",\n    name: \"college\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 76\n    },\n    __self: this\n  }), touched.college && errors.college && React.createElement(Segment, {\n    className: \"error\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 78\n    },\n    __self: this\n  }, errors.college), React.createElement(Segment, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 80\n    },\n    __self: this\n  }, \"Subject:\"), React.createElement(Field, {\n    type: \"text\",\n    name: \"subject\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 81\n    },\n    __self: this\n  }), touched.subject && errors.subject && React.createElement(Segment, {\n    className: \"error\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 83\n    },\n    __self: this\n  }, errors.subject), React.createElement(Segment, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 85\n    },\n    __self: this\n  }, \"I want to use Better Professor To: \"), React.createElement(Field, {\n    component: \"select\",\n    name: \"reason\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 86\n    },\n    __self: this\n  }, React.createElement(\"option\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 87\n    },\n    __self: this\n  }, \"Select a Reason\"), React.createElement(\"option\", {\n    value: \"Better Communicate with my Students\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 88\n    },\n    __self: this\n  }, \"Better Communicate with my Students\"), React.createElement(\"option\", {\n    value: \"Be More Organized and Punctual\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 91\n    },\n    __self: this\n  }, \"Be More Organized and Punctual\"), React.createElement(\"option\", {\n    value: \"Consolidate My Planning into One Place\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 94\n    },\n    __self: this\n  }, \"Consolidate My Planning into One Place\"), React.createElement(\"option\", {\n    value: \"Other\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 97\n    },\n    __self: this\n  }, \"Other\")), touched.reason && errors.reason && React.createElement(Segment, {\n    className: \"error\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 100\n    },\n    __self: this\n  }, errors.reason), React.createElement(Segment, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 102\n    },\n    __self: this\n  }, \"If 'Other', Please Explain: \"), React.createElement(Field, {\n    type: \"text-area\",\n    name: \"other\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 103\n    },\n    __self: this\n  }), touched.other && errors.other && React.createElement(Segment, {\n    className: \"error\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 105\n    },\n    __self: this\n  }, errors.other), React.createElement(\"label\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 107\n    },\n    __self: this\n  }, \"I Agree to BetterProfessor's Terms and Conditions\", React.createElement(Field, {\n    type: \"checkbox\",\n    name: \"terms\",\n    checked: values.terms,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 109\n    },\n    __self: this\n  }), touched.terms && errors.terms && React.createElement(Segment, {\n    className: \"error\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 111\n    },\n    __self: this\n  }, errors.terms)), React.createElement(\"button\", {\n    className: \"form-button\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 114\n    },\n    __self: this\n  }, \"Sign Up!\")), React.createElement(Container, {\n    className: \"login-link\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 116\n    },\n    __self: this\n  }, React.createElement(Segment, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 117\n    },\n    __self: this\n  }, \"Already have an account?\"), React.createElement(NavLink, {\n    to: \"/login\",\n    style: {\n      textDecoration: 'none',\n      color: '#c42847',\n      fontSize: '1.3rem',\n      margin: '5px'\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 118\n    },\n    __self: this\n  }, \"Log In\")));\n};\n\nconst FormikSignUpForm = withFormik({\n  mapPropsToValues(values) {\n    return {\n      firstName: values.firstName || \"\",\n      lastName: values.lastName || \"\",\n      email: values.email || \"\",\n      username: values.username || \"\",\n      password: values.password || \"\",\n      college: values.college || \"\",\n      subject: values.subject || \"\",\n      reason: values.reason || \"\",\n      other: values.other || \"\",\n      terms: values.terms || false\n    };\n  },\n\n  //=====VALIDATION SCHEMA=====\n  validationSchema: Yup.object().shape({\n    firstName: Yup.string().required(\"First name can not be left blank\"),\n    lastName: Yup.string().required(\"Last name can not be left blank\"),\n    email: Yup.string().email(\"Please enter a valid email address\").required(\"Email can not be left blank\"),\n    username: Yup.string().required(\"Please enter a valid username\"),\n    password: Yup.string().min(7, \"Password must be at least 7 characters\").required(\"Please enter a valid password\"),\n    college: Yup.string().required(\"Please indicate at which college/university you teach\"),\n    subject: Yup.string().required(\"Please enter the subject you teach\"),\n    reason: Yup.string().required(\"Please select the reason for creating this account\"),\n    terms: Yup.bool().oneOf([true], \"Please accept the Terms and Conditions\").required()\n  }),\n\n  //=====END OF VALIDATION SCHEMA=====\n  handleSubmit(values, {\n    setStatus,\n    resetForm\n  }) {\n    axios.post(\"https://betterprofessor.herokuapp.com/api/register\", values).then(res => {\n      console.log(\"HTTP POST Response: \", res);\n      setStatus(res.data);\n      resetForm();\n    });\n  }\n\n})(SignUp);\nexport default FormikSignUpForm;","map":{"version":3,"sources":["/home/jordinkolman/Documents/School/FrontEnd/betterprofessor/src/components/SignUp.js"],"names":["React","useEffect","withFormik","Form","Field","Container","Segment","Header","NavLink","axios","Yup","SignUp","errors","touched","status","updateUser","values","margin","width","height","border","borderRadius","display","flexFlow","justifyContent","alignItems","alignContent","backgroundColor","fontSize","color","padding","firstName","lastName","email","username","password","college","subject","reason","other","terms","textDecoration","FormikSignUpForm","mapPropsToValues","validationSchema","object","shape","string","required","min","bool","oneOf","handleSubmit","setStatus","resetForm","post","then","res","console","log","data"],"mappings":"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","sourcesContent":["import React, { useEffect } from \"react\";\nimport { withFormik, Form, Field } from \"formik\";\nimport { Container, Segment, Header } from \"semantic-ui-react\";\nimport { NavLink } from \"react-router-dom\";\nimport axios from \"axios\";\nimport * as Yup from \"yup\";\n\nconst SignUp = ({ errors, touched, status, updateUser, values }) => {\n  useEffect(() => {\n    if (status) {\n      updateUser(status);\n    }\n  }, [status]);\n  return (\n    <Container\n      className=\"Signup-Page\"\n      style={{\n        margin: \"50px\",\n        width: \"800px\",\n        height: \"800px\",\n        border: \"2px solid #000022\",\n        borderRadius: \"20px\",\n        display: \"flex\",\n        flexFlow: \"column nowrap\",\n        justifyContent: \"flex-start\",\n        alignItems: \"space-around\",\n        alignContent: \"space-around\",\n        backgroundColor: \"#fbf5f3\"\n      }}\n    >\n      <Header style={{ fontSize: \"2.5rem\", color: \"#c42847\", margin: \"20px\" }}>\n        Welcome Professor!\n      </Header>\n      <Header style={{ fontSize: \"1.8rem\", color: \"#de3c4b\", margin: \"20px\" }}>\n        Fill Out the Sections Below to Sign Up\n      </Header>\n      <Form\n        style={{\n          display: \"flex\",\n          flexFlow: \"column nowrap\",\n          padding: \"0 25%\",\n          justifyContent: \"space-between\",\n          alignContent: \"center\",\n          margin: \"20px\"\n        }}\n      >\n        <Header style={{ fontSize: \"1.2rem\", color: \"#de3c4b\" }}>\n          All Fields Are Required\n        </Header>\n        <Segment>First Name:</Segment>\n        <Field type=\"text\" name=\"firstName\" />\n        {touched.firstName && errors.firstName && (\n          <Segment className=\"error\">{errors.firstName}</Segment>\n        )}\n        <Segment>Last Name:</Segment>\n        <Field type=\"text\" name=\"lastName\" />\n        {touched.lastName && errors.lastName && (\n          <Segment className=\"error\">{errors.lastName}</Segment>\n        )}\n        <Segment>Email Address:</Segment>\n        <Field type=\"email\" name=\"email\" />\n        {touched.email && errors.email && (\n          <Segment className=\"error\">{errors.email}</Segment>\n        )}\n        <Segment>Username: </Segment>\n        <Field type=\"text\" name=\"username\" />\n        {touched.username && errors.username && (\n          <Segment className=\"error\">{errors.username}</Segment>\n        )}\n        <Segment>Password: </Segment>\n        <Field type=\"password\" name=\"password\" />\n        {touched.password && errors.password && (\n          <Segment className=\"error\">{errors.password}</Segment>\n        )}\n        <Segment>College/University:</Segment>\n        <Field type=\"text\" name=\"college\" />\n        {touched.college && errors.college && (\n          <Segment className=\"error\">{errors.college}</Segment>\n        )}\n        <Segment>Subject:</Segment>\n        <Field type=\"text\" name=\"subject\" />\n        {touched.subject && errors.subject && (\n          <Segment className=\"error\">{errors.subject}</Segment>\n        )}\n        <Segment>I want to use Better Professor To: </Segment>\n        <Field component=\"select\" name=\"reason\">\n          <option>Select a Reason</option>\n          <option value=\"Better Communicate with my Students\">\n            Better Communicate with my Students\n          </option>\n          <option value=\"Be More Organized and Punctual\">\n            Be More Organized and Punctual\n          </option>\n          <option value=\"Consolidate My Planning into One Place\">\n            Consolidate My Planning into One Place\n          </option>\n          <option value=\"Other\">Other</option>\n        </Field>\n        {touched.reason && errors.reason && (\n          <Segment className=\"error\">{errors.reason}</Segment>\n        )}\n        <Segment>If 'Other', Please Explain: </Segment>\n        <Field type=\"text-area\" name=\"other\" />\n        {touched.other && errors.other && (\n          <Segment className=\"error\">{errors.other}</Segment>\n        )}\n        <label>\n          I Agree to BetterProfessor's Terms and Conditions\n          <Field type=\"checkbox\" name=\"terms\" checked={values.terms} />\n          {touched.terms && errors.terms && (\n            <Segment className=\"error\">{errors.terms}</Segment>\n          )}\n        </label>\n        <button className=\"form-button\">Sign Up!</button>\n      </Form>\n      <Container className=\"login-link\">\n        <Segment>Already have an account?</Segment>\n        <NavLink to=\"/login\" style={{textDecoration: 'none', color: '#c42847', fontSize: '1.3rem', margin: '5px'}}>Log In</NavLink>\n      </Container>\n    </Container>\n  );\n};\n\nconst FormikSignUpForm = withFormik({\n  mapPropsToValues(values) {\n    return {\n      firstName: values.firstName || \"\",\n      lastName: values.lastName || \"\",\n      email: values.email || \"\",\n      username: values.username || \"\",\n      password: values.password || \"\",\n      college: values.college || \"\",\n      subject: values.subject || \"\",\n      reason: values.reason || \"\",\n      other: values.other || \"\",\n      terms: values.terms || false\n    };\n  },\n  //=====VALIDATION SCHEMA=====\n  validationSchema: Yup.object().shape({\n    firstName: Yup.string().required(\"First name can not be left blank\"),\n    lastName: Yup.string().required(\"Last name can not be left blank\"),\n    email: Yup.string()\n      .email(\"Please enter a valid email address\")\n      .required(\"Email can not be left blank\"),\n    username: Yup.string().required(\"Please enter a valid username\"),\n    password: Yup.string()\n      .min(7, \"Password must be at least 7 characters\")\n      .required(\"Please enter a valid password\"),\n    college: Yup.string().required(\n      \"Please indicate at which college/university you teach\"\n    ),\n    subject: Yup.string().required(\"Please enter the subject you teach\"),\n    reason: Yup.string().required(\n      \"Please select the reason for creating this account\"\n    ),\n    terms: Yup.bool()\n      .oneOf([true], \"Please accept the Terms and Conditions\")\n      .required()\n  }),\n  //=====END OF VALIDATION SCHEMA=====\n  handleSubmit(values, { setStatus, resetForm }) {\n    axios\n      .post(\"https://betterprofessor.herokuapp.com/api/register\", values)\n      .then(res => {\n        console.log(\"HTTP POST Response: \", res);\n        setStatus(res.data);\n        resetForm();\n      });\n  }\n})(SignUp);\n\nexport default FormikSignUpForm;\n"]},"metadata":{},"sourceType":"module"}