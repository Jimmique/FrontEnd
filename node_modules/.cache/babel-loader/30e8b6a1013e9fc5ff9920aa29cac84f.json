{"ast":null,"code":"var _jsxFileName = \"/home/jordinkolman/Documents/School/FrontEnd/betterprofessor/src/components/SignUp.js\";\nimport React, { useEffect } from \"react\";\nimport { withFormik, Form, Field } from \"formik\";\nimport { Container, Segment, Header } from \"semantic-ui-react\";\nimport axios from 'axios';\nimport * as Yup from \"yup\";\n\nconst SignUp = ({\n  errors,\n  touched,\n  status,\n  updateUser,\n  values\n}) => {\n  useEffect(() => {\n    if (status) {\n      updateUser(status);\n    }\n  }, [status]);\n  return React.createElement(Container, {\n    className: \"Signup-Page\",\n    style: {\n      border: '2px solid #000022',\n      display: 'flex',\n      flexFlow: 'column nowrap',\n      justifyContent: 'center',\n      alignItems: 'center',\n      alignContent: 'space-between'\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 14\n    },\n    __self: this\n  }, React.createElement(Header, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 22\n    },\n    __self: this\n  }, \"Welcome Professor!\"), React.createElement(Header, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 23\n    },\n    __self: this\n  }, \"Fill Out the Sections Below to Sign Up\"), React.createElement(Form, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 24\n    },\n    __self: this\n  }, React.createElement(Header, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 25\n    },\n    __self: this\n  }, \"All Fields Are Required\"), React.createElement(Segment, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 26\n    },\n    __self: this\n  }, \"First Name:\"), React.createElement(Field, {\n    type: \"text\",\n    name: \"firstName\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 27\n    },\n    __self: this\n  }), touched.firstName && errors.firstName && React.createElement(Segment, {\n    className: \"error\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 29\n    },\n    __self: this\n  }, errors.firstName), React.createElement(Segment, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 31\n    },\n    __self: this\n  }, \"Last Name:\"), React.createElement(Field, {\n    type: \"text\",\n    name: \"lastName\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 32\n    },\n    __self: this\n  }), touched.lastName && errors.lastName && React.createElement(Segment, {\n    className: \"error\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 34\n    },\n    __self: this\n  }, errors.lastName), React.createElement(Segment, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 36\n    },\n    __self: this\n  }, \"Email Address:\"), React.createElement(Field, {\n    type: \"email\",\n    name: \"email\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 37\n    },\n    __self: this\n  }), touched.email && errors.email && React.createElement(Segment, {\n    className: \"error\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 39\n    },\n    __self: this\n  }, errors.email), React.createElement(Segment, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 41\n    },\n    __self: this\n  }, \"Username: \"), React.createElement(Field, {\n    type: \"text\",\n    name: \"username\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 42\n    },\n    __self: this\n  }), touched.username && errors.username && React.createElement(Segment, {\n    className: \"error\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 44\n    },\n    __self: this\n  }, errors.username), React.createElement(Segment, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 46\n    },\n    __self: this\n  }, \"Password: \"), React.createElement(Field, {\n    type: \"password\",\n    name: \"password\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 47\n    },\n    __self: this\n  }), touched.password && errors.password && React.createElement(Segment, {\n    className: \"error\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 49\n    },\n    __self: this\n  }, errors.password), React.createElement(Segment, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 51\n    },\n    __self: this\n  }, \"College/University:\"), React.createElement(Field, {\n    type: \"text\",\n    name: \"college\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 52\n    },\n    __self: this\n  }), touched.college && errors.college && React.createElement(Segment, {\n    className: \"error\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 54\n    },\n    __self: this\n  }, errors.college), React.createElement(Segment, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 56\n    },\n    __self: this\n  }, \"Subject:\"), React.createElement(Field, {\n    type: \"text\",\n    name: \"subject\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 57\n    },\n    __self: this\n  }), touched.subject && errors.subject && React.createElement(Segment, {\n    className: \"error\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 59\n    },\n    __self: this\n  }, errors.subject), React.createElement(Segment, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 61\n    },\n    __self: this\n  }, \"I want to use Better Professor To: \"), React.createElement(Field, {\n    component: \"select\",\n    name: \"reason\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 62\n    },\n    __self: this\n  }, React.createElement(\"option\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 63\n    },\n    __self: this\n  }, \"Select a Reason\"), React.createElement(\"option\", {\n    value: \"Better Communicate with my Students\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 64\n    },\n    __self: this\n  }, \"Better Communicate with my Students\"), React.createElement(\"option\", {\n    value: \"Be More Organized and Punctual\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 67\n    },\n    __self: this\n  }, \"Be More Organized and Punctual\"), React.createElement(\"option\", {\n    value: \"Consolidate My Planning into One Place\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 70\n    },\n    __self: this\n  }, \"Consolidate My Planning into One Place\"), React.createElement(\"option\", {\n    value: \"Other\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 73\n    },\n    __self: this\n  }, \"Other\")), touched.reason && errors.reason && React.createElement(Segment, {\n    className: \"error\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 76\n    },\n    __self: this\n  }, errors.reason), React.createElement(Segment, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 78\n    },\n    __self: this\n  }, \"If 'Other', Please Explain: \"), React.createElement(Field, {\n    type: \"text-area\",\n    name: \"other\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 79\n    },\n    __self: this\n  }), touched.other && errors.other && React.createElement(Segment, {\n    className: \"error\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 81\n    },\n    __self: this\n  }, errors.other), React.createElement(\"label\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 83\n    },\n    __self: this\n  }, \"I Agree to BetterProfessor's Terms and Conditions\", React.createElement(Field, {\n    type: \"checkbox\",\n    name: \"terms\",\n    checked: values.terms,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 85\n    },\n    __self: this\n  }), touched.terms && errors.terms && React.createElement(Segment, {\n    className: \"error\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 87\n    },\n    __self: this\n  }, errors.terms)), React.createElement(\"button\", {\n    className: \"form-button\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 90\n    },\n    __self: this\n  }, \"Sign Up!\")));\n};\n\nconst FormikSignUpForm = withFormik({\n  mapPropsToValues(values) {\n    return {\n      firstName: values.firstName || '',\n      lastName: values.lastName || '',\n      email: values.email || '',\n      username: values.username || '',\n      password: values.password || '',\n      college: values.college || '',\n      subject: values.subject || '',\n      reason: values.reason || '',\n      other: values.other || '',\n      terms: values.terms || false\n    };\n  },\n\n  //=====VALIDATION SCHEMA=====\n  validationSchema: Yup.object().shape({\n    firstName: Yup.string().required('First name can not be left blank'),\n    lastName: Yup.string().required('Last name can not be left blank'),\n    email: Yup.string().email('Please enter a valid email address').required('Email can not be left blank'),\n    username: Yup.string().required('Please enter a valid username'),\n    password: Yup.string().min(7, 'Password must be at least 7 characters').required('Please enter a valid password'),\n    college: Yup.string().required('Please indicate at which college/university you teach'),\n    subject: Yup.string().required('Please enter the subject you teach'),\n    reason: Yup.string().required('Please select the reason for creating this account'),\n    terms: Yup.bool().oneOf([true], 'Please accept the Terms and Conditions').required()\n  }),\n\n  //=====END OF VALIDATION SCHEMA=====\n  handleSubmit(values, {\n    setStatus,\n    resetForm\n  }) {\n    axios.post('https://betterprofessor.herokuapp.com/api/register', values).then(res => {\n      console.log('HTTP POST Response: ', res);\n      setStatus(res.data);\n      resetForm();\n    });\n  }\n\n})(SignUp);\nexport default FormikSignUpForm;","map":{"version":3,"sources":["/home/jordinkolman/Documents/School/FrontEnd/betterprofessor/src/components/SignUp.js"],"names":["React","useEffect","withFormik","Form","Field","Container","Segment","Header","axios","Yup","SignUp","errors","touched","status","updateUser","values","border","display","flexFlow","justifyContent","alignItems","alignContent","firstName","lastName","email","username","password","college","subject","reason","other","terms","FormikSignUpForm","mapPropsToValues","validationSchema","object","shape","string","required","min","bool","oneOf","handleSubmit","setStatus","resetForm","post","then","res","console","log","data"],"mappings":"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","sourcesContent":["import React, { useEffect } from \"react\";\nimport { withFormik, Form, Field } from \"formik\";\nimport { Container, Segment, Header } from \"semantic-ui-react\";\nimport axios from 'axios'\nimport * as Yup from \"yup\";\n\nconst SignUp = ({ errors, touched, status, updateUser, values }) => {\n    useEffect(() => {\n        if (status) {\n            updateUser(status)\n        }\n    }, [status])\n  return (\n    <Container className=\"Signup-Page\" style={{\n      border: '2px solid #000022',\n      display: 'flex',\n      flexFlow: 'column nowrap',\n      justifyContent: 'center',\n      alignItems: 'center',\n      alignContent: 'space-between'\n    }}>\n      <Header>Welcome Professor!</Header>\n      <Header>Fill Out the Sections Below to Sign Up</Header>\n      <Form>\n        <Header>All Fields Are Required</Header>\n        <Segment>First Name:</Segment>\n        <Field type=\"text\" name=\"firstName\" />\n        {touched.firstName && errors.firstName && (\n          <Segment className=\"error\">{errors.firstName}</Segment>\n        )}\n        <Segment>Last Name:</Segment>\n        <Field type=\"text\" name=\"lastName\" />\n        {touched.lastName && errors.lastName && (\n          <Segment className=\"error\">{errors.lastName}</Segment>\n        )}\n        <Segment>Email Address:</Segment>\n        <Field type=\"email\" name=\"email\" />\n        {touched.email && errors.email && (\n          <Segment className=\"error\">{errors.email}</Segment>\n        )}\n        <Segment>Username: </Segment>\n        <Field type=\"text\" name=\"username\" />\n        {touched.username && errors.username && (\n          <Segment className=\"error\">{errors.username}</Segment>\n        )}\n        <Segment>Password: </Segment>\n        <Field type=\"password\" name=\"password\" />\n        {touched.password && errors.password && (\n          <Segment className=\"error\">{errors.password}</Segment>\n        )}\n        <Segment>College/University:</Segment>\n        <Field type=\"text\" name=\"college\" />\n        {touched.college && errors.college && (\n          <Segment className=\"error\">{errors.college}</Segment>\n        )}\n        <Segment>Subject:</Segment>\n        <Field type=\"text\" name=\"subject\" />\n        {touched.subject && errors.subject && (\n          <Segment className=\"error\">{errors.subject}</Segment>\n        )}\n        <Segment>I want to use Better Professor To: </Segment>\n        <Field component=\"select\" name=\"reason\">\n          <option>Select a Reason</option>\n          <option value=\"Better Communicate with my Students\">\n            Better Communicate with my Students\n          </option>\n          <option value=\"Be More Organized and Punctual\">\n            Be More Organized and Punctual\n          </option>\n          <option value=\"Consolidate My Planning into One Place\">\n            Consolidate My Planning into One Place\n          </option>\n          <option value=\"Other\">Other</option>\n        </Field>\n        {touched.reason && errors.reason && (\n          <Segment className=\"error\">{errors.reason}</Segment>\n        )}\n        <Segment>If 'Other', Please Explain: </Segment>\n        <Field type=\"text-area\" name=\"other\" />\n        {touched.other && errors.other && (\n          <Segment className=\"error\">{errors.other}</Segment>\n        )}\n        <label>\n          I Agree to BetterProfessor's Terms and Conditions\n          <Field type=\"checkbox\" name=\"terms\" checked={values.terms} />\n          {touched.terms && errors.terms && (\n            <Segment className=\"error\">{errors.terms}</Segment>\n          )}\n        </label>\n        <button className=\"form-button\">Sign Up!</button>\n      </Form>\n    </Container>\n  );\n}\n\nconst FormikSignUpForm = withFormik({\n    mapPropsToValues(values) {\n        return {\n            firstName: values.firstName || '',\n            lastName: values.lastName || '',\n            email: values.email || '',\n            username: values.username || '',\n            password: values.password || '',\n            college: values.college || '',\n            subject: values.subject || '',\n            reason: values.reason || '',\n            other: values.other || '',\n            terms: values.terms || false\n        }\n    },\n    //=====VALIDATION SCHEMA=====\n    validationSchema: Yup.object().shape({\n        firstName: Yup.string()\n        .required('First name can not be left blank'),\n        lastName: Yup.string()\n        .required('Last name can not be left blank'),\n        email: Yup.string()\n        .email('Please enter a valid email address')\n        .required('Email can not be left blank'),\n        username: Yup.string()\n        .required('Please enter a valid username'),\n        password: Yup.string()\n        .min(7, 'Password must be at least 7 characters')\n        .required('Please enter a valid password'), \n        college: Yup.string()\n        .required('Please indicate at which college/university you teach'),\n        subject: Yup.string()\n        .required('Please enter the subject you teach'),\n        reason: Yup.string()\n        .required('Please select the reason for creating this account'),\n        terms: Yup.bool()\n        .oneOf([true], 'Please accept the Terms and Conditions')\n        .required()\n    }),\n    //=====END OF VALIDATION SCHEMA=====\n    handleSubmit(values, { setStatus, resetForm }) {\n        axios.post('https://betterprofessor.herokuapp.com/api/register', values).then(res => {\n            console.log('HTTP POST Response: ', res);\n            setStatus(res.data);\n            resetForm();\n        })\n    },\n})(SignUp)\n\nexport default FormikSignUpForm"]},"metadata":{},"sourceType":"module"}