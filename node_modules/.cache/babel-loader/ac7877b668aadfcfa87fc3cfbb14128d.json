{"ast":null,"code":"var _jsxFileName = \"/home/jordinkolman/Documents/School/FrontEnd/src/components/SignUp.js\";\nimport React from \"react\";\nimport { withFormik, Form, Field } from \"formik\";\nimport { Container, Segment, Header } from \"semantic-ui-react\";\nimport { NavLink } from \"react-router-dom\";\nimport axios from \"axios\";\nimport * as Yup from \"yup\";\n\nconst SignUp = ({\n  errors,\n  touched\n}) => {\n  return React.createElement(Container, {\n    className: \"Signup-Page\",\n    style: {\n      margin: \"50px\",\n      width: \"800px\",\n      height: \"100%\",\n      display: \"flex\",\n      flexFlow: \"column nowrap\",\n      justifyContent: \"flex-start\",\n      alignItems: \"space-around\",\n      alignContent: \"space-around\",\n      backgroundColor: 'white',\n      boxShadow: '0 4px 8px 0 rgba(0, 0, 0, 0.2), 0 6px 20px 0 rgba(0, 0, 0, 0.19)'\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 11\n    },\n    __self: this\n  }, React.createElement(Header, {\n    style: {\n      fontSize: \"2.5rem\",\n      color: \"#c42847\",\n      margin: \"20px\"\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 26\n    },\n    __self: this\n  }, \"Welcome Professor!\"), React.createElement(Header, {\n    style: {\n      fontSize: \"1.8rem\",\n      color: \"#de3c4b\",\n      margin: \"20px\"\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 29\n    },\n    __self: this\n  }, \"Fill Out the Sections Below to Sign Up\"), React.createElement(Form, {\n    style: {\n      display: \"flex\",\n      flexFlow: \"column nowrap\",\n      padding: \"0 25%\",\n      justifyContent: \"space-between\",\n      alignItems: \"space-around\",\n      margin: \"20px\",\n      height: '100%'\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 32\n    },\n    __self: this\n  }, React.createElement(Header, {\n    style: {\n      fontSize: \"1.2rem\",\n      color: \"#de3c4b\"\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 43\n    },\n    __self: this\n  }, \"All Fields Are Required\"), React.createElement(Segment, {\n    style: {\n      display: 'flex',\n      justifyContent: 'flex-start',\n      color: '#000022',\n      margin: '5px 0 10px 0'\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 74\n    },\n    __self: this\n  }, \"Email Address(Username)\"), React.createElement(Field, {\n    type: \"email\",\n    name: \"username\",\n    style: {\n      height: '20px',\n      margin: '5px 0 10px 0'\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 80\n    },\n    __self: this\n  }), touched.username && errors.username && React.createElement(Segment, {\n    className: \"error\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 85\n    },\n    __self: this\n  }, errors.username), React.createElement(Segment, {\n    style: {\n      display: 'flex',\n      justifyContent: 'flex-start',\n      color: '#000022',\n      margin: '5px 0 10px 0'\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 100\n    },\n    __self: this\n  }, \"Password\"), React.createElement(Field, {\n    type: \"password\",\n    name: \"password\",\n    style: {\n      height: '20px',\n      margin: '5px 0 10px 0'\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 106\n    },\n    __self: this\n  }), touched.password && errors.password && React.createElement(Segment, {\n    className: \"error\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 111\n    },\n    __self: this\n  }, errors.password), React.createElement(\"button\", {\n    className: \"form-button\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 185\n    },\n    __self: this\n  }, \"Sign Up!\")), React.createElement(Container, {\n    className: \"login-link\",\n    style: {\n      margin: '10px'\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 187\n    },\n    __self: this\n  }, React.createElement(Segment, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 188\n    },\n    __self: this\n  }, \"Already have an account?\"), React.createElement(NavLink, {\n    to: \"/login\",\n    style: {\n      textDecoration: 'none',\n      color: '#c42847',\n      fontSize: '1.3rem'\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 189\n    },\n    __self: this\n  }, \"Log In\")));\n};\n\nconst FormikSignUpForm = withFormik({\n  mapPropsToValues(values) {\n    return {\n      // firstName: values.firstName || \"\",\n      // lastName: values.lastName || \"\",\n      // email: values.email || \"\",\n      username: values.username || \"\",\n      password: values.password || \"\" // college: values.college || \"\",\n      // subject: values.subject || \"\",\n      // reason: values.reason || \"\",\n      // other: values.other || \"\",\n      // terms: values.terms || false\n\n    };\n  },\n\n  //=====VALIDATION SCHEMA=====\n  validationSchema: Yup.object().shape({\n    //   firstName: Yup.string().required(\"First name can not be left blank\"),\n    //   lastName: Yup.string().required(\"Last name can not be left blank\"),\n    //   email: Yup.string()\n    //     .email(\"Please enter a valid email address\")\n    //     .required(\"Email can not be left blank\"),\n    username: Yup.string().required(\"Please enter a valid username\"),\n    password: Yup.string().min(7, \"Password must be at least 7 characters\").required(\"Please enter a valid password\") //   college: Yup.string().required(\n    //     \"Please indicate at which college/university you teach\"\n    //   ),\n    //   subject: Yup.string().required(\"Please enter the subject you teach\"),\n    //   reason: Yup.string().required(\n    //     \"Please select the reason for creating this account\"\n    //   ),\n    //   terms: Yup.bool()\n    //     .oneOf([true], \"Please accept the Terms and Conditions\")\n    //     .required()\n\n  }),\n\n  //=====END OF VALIDATION SCHEMA=====\n  handleSubmit(values, {\n    setStatus,\n    resetForm\n  }) {\n    axios.post(\"https://betterprofessor.herokuapp.com/api/register\", values).then(res => {\n      console.log(\"HTTP POST Response: \", res);\n      setStatus(res.data);\n      resetForm();\n    });\n  }\n\n})(SignUp);\nexport default FormikSignUpForm;","map":{"version":3,"sources":["/home/jordinkolman/Documents/School/FrontEnd/src/components/SignUp.js"],"names":["React","withFormik","Form","Field","Container","Segment","Header","NavLink","axios","Yup","SignUp","errors","touched","margin","width","height","display","flexFlow","justifyContent","alignItems","alignContent","backgroundColor","boxShadow","fontSize","color","padding","username","password","textDecoration","FormikSignUpForm","mapPropsToValues","values","validationSchema","object","shape","string","required","min","handleSubmit","setStatus","resetForm","post","then","res","console","log","data"],"mappings":"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","sourcesContent":["import React from \"react\";\nimport { withFormik, Form, Field } from \"formik\";\nimport { Container, Segment, Header } from \"semantic-ui-react\";\nimport { NavLink } from \"react-router-dom\";\nimport axios from \"axios\";\nimport * as Yup from \"yup\";\n\nconst SignUp = ({ errors, touched }) => {\n \n  return (\n    <Container\n      className=\"Signup-Page\"\n      style={{\n        margin: \"50px\",\n        width: \"800px\",\n        height: \"100%\",\n        display: \"flex\",\n        flexFlow: \"column nowrap\",\n        justifyContent: \"flex-start\",\n        alignItems: \"space-around\",\n        alignContent: \"space-around\",\n        backgroundColor: 'white',\n        boxShadow: '0 4px 8px 0 rgba(0, 0, 0, 0.2), 0 6px 20px 0 rgba(0, 0, 0, 0.19)'\n      }}\n    >\n      <Header style={{ fontSize: \"2.5rem\", color: \"#c42847\", margin: \"20px\" }}>\n        Welcome Professor!\n      </Header>\n      <Header style={{ fontSize: \"1.8rem\", color: \"#de3c4b\", margin: \"20px\" }}>\n        Fill Out the Sections Below to Sign Up\n      </Header>\n      <Form\n        style={{\n          display: \"flex\",\n          flexFlow: \"column nowrap\",\n          padding: \"0 25%\",\n          justifyContent: \"space-between\",\n          alignItems: \"space-around\",\n          margin: \"20px\",\n          height: '100%'\n        }}\n      >\n        <Header style={{ fontSize: \"1.2rem\", color: \"#de3c4b\" }}>\n          All Fields Are Required\n        </Header>\n        {/* <Segment style={{\n          display: 'flex', \n          justifyContent:'flex-start', \n          color: '#000022',\n          margin: '5px 0'\n          }}>\n            First Name\n          </Segment>\n        <Field type=\"text\" name=\"firstName\" style={{\n          height: '20px',\n          margin: '5px 0'\n        }}/>\n        {touched.firstName && errors.firstName && (\n          <Segment className=\"error\">{errors.firstName}</Segment>\n        )}\n        <Segment style={{\n          display: 'flex', \n          justifyContent:'flex-start', \n          color: '#000022',\n          margin: '5px 0'\n          }}>Last Name</Segment>\n        <Field type=\"text\" name=\"lastName\" style={{\n          height: '20px',\n          margin: '5px 0'\n        }}/>\n        {touched.lastName && errors.lastName && (\n          <Segment className=\"error\">{errors.lastName}</Segment>\n        )} */}\n        <Segment style={{\n          display: 'flex', \n          justifyContent:'flex-start', \n          color: '#000022',\n          margin: '5px 0 10px 0'\n          }}>Email Address(Username)</Segment>\n        <Field type=\"email\" name=\"username\" style={{\n          height: '20px',\n          margin: '5px 0 10px 0'\n        }}/>\n        {touched.username && errors.username && (\n          <Segment className=\"error\">{errors.username}</Segment>\n        )}\n        {/* <Segment style={{\n          display: 'flex', \n          justifyContent:'flex-start', \n          color: '#000022',\n          margin: '5px 0'\n          }}>Username</Segment>\n        <Field type=\"text\" name=\"username\" style={{\n          height: '20px',\n          margin: '5px 0'\n        }}/>\n        {touched.username && errors.username && (\n          <Segment className=\"error\">{errors.username}</Segment>\n        )} */}\n        <Segment style={{\n          display: 'flex', \n          justifyContent:'flex-start', \n          color: '#000022',\n          margin: '5px 0 10px 0'\n          }}>Password</Segment>\n        <Field type=\"password\" name=\"password\" style={{\n          height: '20px',\n          margin: '5px 0 10px 0'\n        }}/>\n        {touched.password && errors.password && (\n          <Segment className=\"error\">{errors.password}</Segment>\n        )}\n        {/* <Segment style={{\n          display: 'flex', \n          justifyContent:'flex-start', \n          color: '#000022',\n          margin: '5px 0'\n          }}>College/University</Segment>\n        <Field type=\"text\" name=\"college\" style={{\n          height: '20px',\n          margin: '5px 0'\n        }}/>\n        {touched.college && errors.college && (\n          <Segment className=\"error\">{errors.college}</Segment>\n        )}\n        <Segment style={{\n          display: 'flex', \n          justifyContent:'flex-start', \n          color: '#000022',\n          margin: '5px 0'\n          }}>Subject</Segment>\n        <Field type=\"text\" name=\"subject\" style={{\n          height: '20px',\n          margin: '5px 0'\n        }}/>\n        {touched.subject && errors.subject && (\n          <Segment className=\"error\">{errors.subject}</Segment>\n        )}\n        <Segment style={{\n          display: 'flex', \n          justifyContent:'flex-start', \n          color: '#000022',\n          margin: '5px 0'\n          }}>I want to use Better Professor To</Segment>\n        <Field component=\"select\" name=\"reason\" style={{\n          height: '20px',\n          margin: '5px 0',\n          width: '70%'\n        }}>\n          <option>Select a Reason</option>\n          <option value=\"Better Communicate with my Students\">\n            Better Communicate with my Students\n          </option>\n          <option value=\"Be More Organized and Punctual\">\n            Be More Organized and Punctual\n          </option>\n          <option value=\"Consolidate My Planning into One Place\">\n            Consolidate My Planning into One Place\n          </option>\n          <option value=\"Other\">Other</option>\n        </Field>\n        {touched.reason && errors.reason && (\n          <Segment className=\"error\">{errors.reason}</Segment>\n        )}\n        <Segment style={{\n          display: 'flex', \n          justifyContent:'flex-start', \n          color: '#000022',\n          margin: '5px 0'\n          }}>If 'Other', Please Explain</Segment>\n        <Field type=\"text-area\" name=\"other\" style={{\n          height: '50px',\n          margin: '5px 0',\n        }}/>\n        {touched.other && errors.other && (\n          <Segment className=\"error\">{errors.other}</Segment>\n        )}\n        <label>\n          <Field type=\"checkbox\" name=\"terms\" checked={values.terms}/>\n          I Agree to BetterProfessor's Terms and Conditions\n          {touched.terms && errors.terms && (\n            <Segment className=\"error\">{errors.terms}</Segment>\n          )}\n        </label> */}\n        <button className=\"form-button\">Sign Up!</button>\n      </Form>\n      <Container className=\"login-link\" style={{ margin: '10px'}}>\n        <Segment>Already have an account?</Segment>\n        <NavLink to=\"/login\" style={{textDecoration: 'none', color: '#c42847', fontSize: '1.3rem'}}>Log In</NavLink>\n      </Container>\n    </Container>\n  );\n};\n\nconst FormikSignUpForm = withFormik({\n  mapPropsToValues(values) {\n    return {\n      // firstName: values.firstName || \"\",\n      // lastName: values.lastName || \"\",\n      // email: values.email || \"\",\n      username: values.username || \"\",\n      password: values.password || \"\",\n      // college: values.college || \"\",\n      // subject: values.subject || \"\",\n      // reason: values.reason || \"\",\n      // other: values.other || \"\",\n      // terms: values.terms || false\n    };\n  },\n  //=====VALIDATION SCHEMA=====\n   validationSchema: Yup.object().shape({\n  //   firstName: Yup.string().required(\"First name can not be left blank\"),\n  //   lastName: Yup.string().required(\"Last name can not be left blank\"),\n  //   email: Yup.string()\n  //     .email(\"Please enter a valid email address\")\n  //     .required(\"Email can not be left blank\"),\n    username: Yup.string().required(\"Please enter a valid username\"),\n    password: Yup.string()\n      .min(7, \"Password must be at least 7 characters\")\n      .required(\"Please enter a valid password\"),\n  //   college: Yup.string().required(\n  //     \"Please indicate at which college/university you teach\"\n  //   ),\n  //   subject: Yup.string().required(\"Please enter the subject you teach\"),\n  //   reason: Yup.string().required(\n  //     \"Please select the reason for creating this account\"\n  //   ),\n  //   terms: Yup.bool()\n  //     .oneOf([true], \"Please accept the Terms and Conditions\")\n  //     .required()\n   }),\n  //=====END OF VALIDATION SCHEMA=====\n  handleSubmit(values, { setStatus, resetForm }) {\n    axios\n      .post(\"https://betterprofessor.herokuapp.com/api/register\", values)\n      .then(res => {\n        console.log(\"HTTP POST Response: \", res);\n        setStatus(res.data);\n        resetForm();\n      });\n  }\n})(SignUp);\n\nexport default FormikSignUpForm;\n"]},"metadata":{},"sourceType":"module"}